// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  userId        String    @unique
  email         String    @unique
  role          String
  name          String?
  departments   UserDepartment[]
  // password      String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model Department {
  id        String   @id
  name      String
  users     UserDepartment[]
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "departments")
}

model UserDepartment {
  id            String    @id @default(cuid())
  userId        String
  departmentId  String
  user          User      @relation(fields: [userId], references: [userId])
  department    Department @relation(fields: [departmentId], references: [id])
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "user_departments")

}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  authorId  String
  published Boolean  @default(false)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "posts")
}

model Project {
  id        String   @id @default(cuid())
  title     String
  description String?
  status    String
  start     String
  end       String
  progress  Int
  tasks     Task[]
  activities ProjectActivity[]
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "projects")
}

model Task {
  id        String   @id @default(cuid())
  title     String
  type      String
  level     Int
  start     String
  end       String
  status    String
  description String?
  progress  Int
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  parentTaskId String?
  parent    Task?    @relation("ParentTask", fields: [parentTaskId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parents   Task[]   @relation("ParentTask")

  @@map(name: "tasks")
}

model ProjectActivity {
  id        String   @id @default(cuid())
  projectId String
  userId    String
  tag       String
  content   String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")
  project   Project  @relation(fields: [projectId], references: [id])

  @@map(name: "project_activities")
}

// Samples
model SampleTask {
  id        String   @id @default(cuid())
  title     String
  status    String
  priority  String

  @@map(name: "sample_tasks")
}
